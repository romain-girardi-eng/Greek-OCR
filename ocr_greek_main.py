#!/usr/bin/env python3
"""
OCR GREC ANCIEN - POINT D'ENTR√âE PRINCIPAL
==========================================
Lance la version optimis√©e pour Mac ou la version de base selon la plateforme.
"""

import sys
import os
import platform
from pathlib import Path

def main():
    """Fonction principale qui d√©termine quelle version lancer"""
    
    print("üî§ OCR Grec Ancien - Lancement...")
    print("=" * 50)
    
    # D√©tection de la plateforme
    is_macos = platform.system() == "Darwin"
    
    if is_macos:
        print("üçé macOS d√©tect√© - Lancement de la version optimis√©e...")
        
        # V√©rifier si la version optimis√©e existe
        optimized_path = Path("optimized_mac_version/ocr_greek_mac.py")
        
        if optimized_path.exists():
            print("‚úÖ Version optimis√©e trouv√©e")
            
            # Importer et lancer la version optimis√©e
            try:
                sys.path.insert(0, "optimized_mac_version")
                from ocr_greek_mac import main as mac_main
                mac_main()
            except ImportError as e:
                print(f"‚ùå Erreur d'import: {e}")
                print("üîÑ Lancement de la version de base...")
                launch_base_version()
        else:
            print("‚ö†Ô∏è Version optimis√©e non trouv√©e")
            print("üîÑ Lancement de la version de base...")
            launch_base_version()
    else:
        print("üñ•Ô∏è Autre plateforme d√©tect√©e - Lancement de la version de base...")
        launch_base_version()

def launch_base_version():
    """Lance la version de base"""
    print("üìö Lancement de la version de base...")
    
    # V√©rifier si les modules de base existent
    if Path("lemmatique_search.py").exists():
        print("‚úÖ Module de recherche lemmatique trouv√©")
        
        try:
            # Import et lancement de base
            import tkinter as tk
            from tkinter import ttk, scrolledtext
            from lemmatique_search import LemmatiqueSearchEngine, LemmatiqueSearchUI
            
            # Cr√©er une application de base
            root = tk.Tk()
            root.title("OCR Grec - Version de Base")
            root.geometry("800x600")
            
            # Cr√©er le moteur de recherche
            search_engine = LemmatiqueSearchEngine()
            ui = LemmatiqueSearchUI(root, search_engine)
            
            # Afficher l'interface
            ui.show_search_dialog()
            
            print("üéâ Application lanc√©e avec succ√®s!")
            root.mainloop()
            
        except Exception as e:
            print(f"‚ùå Erreur lors du lancement: {e}")
            print("üí° V√©rifiez que toutes les d√©pendances sont install√©es")
    else:
        print("‚ùå Modules de base non trouv√©s")
        print("üí° Veuillez installer les d√©pendances ou utiliser la version optimis√©e")

if __name__ == "__main__":
    main() 